[tool.autopep8]
ignore = "E713, E731"
max_line_length = 120

[tool.poetry]
name = "jambot"
version = "0.1.0"
description = ""
authors = ["Jayme Gordon <jaymegordo@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.9,<3.10"
bitmex = "^0.2.2"
Bybit = "^0.2.12"
discord = "^1.0.1"
PyPika = "^0.48.1"
pyodbc = "^4.0.32"
pandas = "^1.2.3"
SQLAlchemy = {version = ">=1.4,<1.4.23"}
PyYAML = "^5.4.1"
numpy = "^1.22.0" #"==1.20.3"  # poetry run pip install numpy==1.20.3 --no-use-pep517
aenum = "^3.0.0"
sklearn = "^0.0"
ta = "^0.7.0"
pygsheets = "^2.0.5"
jsonschema = "<4.0"
lightgbm = "^3.3.1"
mlflow = "^1.21.0"
# mlflow = {git = "https://github.com/creinders/mlflow.git", branch = "master"}
jgutils = {path = "../jgutils", extras = ["azurestorage"], develop = true}

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
plotly = "^4.14.3"
joblib = "^1.0.1"
pylint = "^2.7.4"
ipykernel = "^5.5.3"
azure-functions = "^1.7.0"
pytest = "^6.2.4"
flake8 = "^3.9.2"
autopep8 = "^1.5.7"
isort = "^5.8.0"
pre-commit = "^2.12.1"
TA-Lib = "^0.4.19"
findiff = "^0.8.9"
icecream = "^2.1.0"
memory-profiler = "^0.58.0"
# filprofiler = "==2021.8.0"
colored-traceback = "^0.3.0"
colorlog = "^6.4.1"
graphviz = "^0.17"
seaborn = "^0.11.2"
llvmlite = "0.38"
# shap = "^0.40.0"
pyarrow = "^6.0.0"
scikit-optimize = "^0.9.0"
pytest-cov = "^3.0.0"
jgutils = {path = "../jgutils", extras = ["colorlogging", "azurestorage"], develop = true}
tqdm = "^4.62.3"


[tool.pytest.ini_options]
testpaths = [
    "tests"]
filterwarnings = [
    "ignore:`np.long` is a deprecated",
    "ignore:`np.object` is a deprecated",
    "ignore:.*format is not registered",
    "ignore:Call to deprecated create function",
    "ignore:private variables, such as '_DataType__str'",
    "ignore:Use of .. or absolute path in a resource path",
    "ignore:Failed to parse headers",
    "ignore:DataFrame is highly fragmented",
    "ignore:invalid value encountered in double_scalars"
]

[tool.coverage.run]
branch = true
dynamic_context = "test_function"
omit = [
    "jambot/charts.py",
    "jambot/tradesys/strategies/chop.py",
    "jambot/tradesys/strategies/sfp.py",
    "jambot/tradesys/strategies/trend.py",
    "jambot/tradesys/strategies/trendclose.py",
    "jambot/tradesys/strategies/trendrev.py",
    "jambot/utils/styles.py"]

[tool.coverage.report]
precision = 2
show_missing = false
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING",
    "raise AssertionError",
    "raise NotImplementedError"
]

[tool.coverage.html]
show_contexts = true


[tool.pyright]
include = ["jambot", "tests"]
ignore = ["working"]
reportWildcardImportFromLibrary = "none"
reportUnboundVariable = "information"
reportMissingImports = "information"
reportGeneralTypeIssues = "information"
reportOptionalIterable = "none"
reportOptionalMemberAccess = "information"
reportOptionalSubscript = "information"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
